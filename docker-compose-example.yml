version: '3.8'
services:
  nfs-server:
    image: ghcr.io/obeone/nfs-server:latest
    cap_add:
      - SYS_ADMIN
    environment:
      - TZ=America/Chicago
      - NFS_EXPORT_0=/transcodes      *(rw,sync,no_subtree_check,no_root_squash,insecure)
      - NFS_VERSION=3
      #- NFS_LOG_LEVEL=DEBUG
    hostname: "jellyfin-nfs-server"
    ports:
      - 2049:2049
      - 111:111
      - 32765:32765
      - 32767:32767
      - 2049:2049/udp
      - 111:111/udp
      - 32765:32765/udp
      - 32767:32767/udp
    networks:
      - default
    volumes:
      - /transcodes:/transcodes
    deploy:
      placement:
        constraints:
         - node.labels.transcode==1 # Manual label used for swarm nodes that meet Host Assumptions
         - node.labels.isdmm==1 # 
        max_replicas_per_node: 1

  jellyfin-transcode: 
    image: ghcr.io/gitdeath/rffmpeg-worker:main
    hostname: "jellyfin-transcode-{{.Task.Slot}}" # Defines naming convention for access by scaling script
    environment:
     - TZ=America/Chicago
    networks:
     - default
     
    cap_add:
      - SYS_ADMIN 

    volumes:
     - jellyfin_config:/config # Volume for /config directory
     - ssh_auth:/root/.ssh # Volume for /config/rrfmpeg/.ssh has to be a direct mount or SSH won't work properly
     - jellyfin_cache:/cache # Volume for cache directory
     - media:/media # Volume for media directory
     - /dev/dri:/dev/dri # Triggers DMM to allow device mapping as Docker Swarm doesn't handle natively
    deploy:
      replicas: 2
      placement:
        constraints:
         - node.labels.transcode==1 # Manual label used for swarm nodes that meet Host Assumptions
         - node.labels.isdmm==1 # Autolabel that checks is DMM is running on host
         - node.labels.isjellyfin==0 # Autolable that checks to make sure Jellyfin isn't running on host (we don't want transcoding to be done on the same machine if possible) this can be used in other container placement requirements to prevent anything taking resource from Jellyfin
        max_replicas_per_node: 1

  jellyfin: 
    image: ghcr.io/gitdeath/jellyfin-rffmpeg-server:latest
    environment:
     - TZ=America/Chicago
    networks:

     - default

    ports:
     - 8096:8096
     - 8920:8920
     - 1900:1900
     - 7359:7359
    volumes:
     - jellyfin_config:/config # Volume for /config directory
     - jellyfin_cache:/cache # Volume for cache directory
     - media:/media # Volume for media directory
     - /dev/dri:/dev/dri # Triggers DMM to allow device mapping as Docker Swarm doesn't handle natively
     - /transcodes:/transcodes 
    deploy:
      placement:
        constraints:
         - node.labels.transcode==1 # Manual label used for swarm nodes that meet Host Assumptions
         - node.labels.isnfs==1
 
networks:         
  default:
    driver: overlay

volumes:
  jellyfin_config:
    driver_opts:
      type: nfs

  jellyfin_cache:
    driver_opts:
      type: nfs

  ssh_auth:
    driver_opts:
      type: nfs

  media:
    driver_opts:
      type: nfs


