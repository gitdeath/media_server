https://www.reddit.com/r/Ubiquiti/comments/17oozwk/how_to_configure_dynamic_dns_with_cloudflare_and/

User Guide
2024-05 update: You must now create an account with OpenDNS to use DNS-O-Matic.

2024-02 update: DNS-O-Matic is now available as a DDNS provider in UniFi Network Application v8.0.28 and up. You don't need to specify DynDNS as the provider with a custom URL anymore, but the rest of the steps in this guide remain relevant.

----- OP -----

This guide will help you configure automatic Dynamic DNS (DDNS) records updates based on your WAN IP for DNS records hosted by Cloudflare or any DNS service provider supported by OpenDNS' DNS-O-Matic service by configuring the native DDNS settings in the UniFi Network Application on your UniFi OS device.

These instructions should work with most of Ubiquiti's UniFi OS devices including the UniFi Dream Machine (UDM), UniFi Dream Machine Pro (UDM-Pro), UniFi Dream Machine SE (UDM-SE), and UniFi Dream Router (UDR). This guide was written and tested on a UDM-SE running UniFi OS v3.1.16 and UniFi Network Application v7.5.187.

Background
I've been a fan of the excellent unifios-utilities since 2020 when boostchicken was still getting that project off the ground. Unfortunately, with the release of UniFi OS v3.x, it's no longer feasible to run the Cloudflare DDNS container on UDM/UDM-Pro/UDM-SE/UDR platforms due to the loss of podman compatibility. While nspawn-container is a functional alternative, after being spoiled by docker/podman containers on UniFi OS v1.x/v2.x, I just don't have it in me to rebuild that DDNS functionality from scratch and maintain both the container and the code within it. So I dug into my toolkit to figure out something simpler as I stabilize my homelab and smart home while preparing (hoping) to become a dad next year. In doing so, I rediscovered my old DNS-O-Matic account and a solution that worked for me and might also work for you.

Disclaimer
I am excited to share this little writeup with the community, but I am not in a position to offer much troubleshooting for issues that arise by following these instructions. These steps worked for me in my environment, but if something goes wrong in your environment, please try your best to fix it using the troubleshooting steps at the bottom of this guide, reading the links to related resources throughout this document, and by searching other FAQs/forums before you post. In my experience, the more work you can show you've done before asking for help, the more invested others will be in helping you.

That said, if there are any errors in this guide or suggestions for improvements, please point them out and I'll be happy to review and update as I become aware of them.

Assumptions
This guide assumes you're using Cloudflare to host your DNS records. DNS-O-Matic works with many other services and can be updated via other methods, so feel free to follow this guide even if your DNS is with a different provider, or ignore it entirely if you decide another update method will work better for you. Regardless of the DNS service that hosts your records, if you can use it with DNS-O-Matic, the UniFi-specific steps below will work just the same. I personally have three different providers in my configuration and DNS-O-Matic updates them all simultaneously from a single entry in the UniFi Network Application.

Prerequisites
An OpenDNS account. This free service was launched in 2007 and hasn't changed much since, though you must have an OpenDNS account to use it now.

A Cloudflare account hosting one or more DNS records that you want Dynamic DNS configured for. These DNS records must be A records.

Access to your Cloudflare Global API Key:

DNS-O-Matic is an old-ass cloud service and its API calls to Cloudflare don't support Cloudflare User API Tokens.

If you aren't comfortable sharing your Cloudflare Global API Key with a third party service, then stop here; this guide isn't for you.

A UniFi gateway with a configurable WAN connection such as the UDM, UDM-Pro, UDM-SE, or UDR.

Administrative access to the UniFi Network application to configure Dynamic DNS.

Step-by-step instructions
1. Set up DNS-O-Matic to update Cloudflare via API
Log in to DNS-O-Matic and select Add a service.

(Cloudflare only) From the drop-down, select CloudFlare (sic) and set it up as per Cloudflare: Use dynamic IP addresses Â· Cloudflare DNS docs.

Set Hostname to the full hostname of the domain you wish to update, e.g. yourdomain.tld if want DDNS for the root domain or subdomain.yourdomain.tld if you want DDNS for a subdomain.

Set Domain to the root domain of your zone. If you want DDNS for the root domain, this will be the same as Hostname. If you want DDNS for a subdomain, get the root domain by removing subdomain from subdomain.yourdomain.tld and leaving yourdomain.tld.

If you're using another service other than Cloudflare, this is where you will choose that service provider and configure it yourself.

Select Update account info.

If you have more than one DNS record to update, return to Step 2 and repeat.

When all your services and records are configured in DNS-O-Matic, move on to configuring DDNS within the UniFi Network application.

2. Set up Dynamic DNS in the UniFi Network application
** Note: As of 2024-01, UniFi Network Application v8.0.28 and up offer DNS-O-Matic as a DDNS service. Use DNS-O-Matic instead of DynDNS to simplify your configuration. **

Tested with a UDM-SE running UniFi OS 3.1.16 and UniFi Network application 7.5.187 in the new interface.

Open the UniFi Network application.

From the toolbar on the left-hand side, hit the Settings gear and select Internet.

From the Internet settings page, select the WAN connection you wish to update. For most people, this will be WAN or WAN1.

From the WAN configuration page, locate the Dynamic DNS header and select Create New Dynamic DNS. A pop-up will appear.

In the resulting Dynamic DNS pop-up, enter the following information into their respective fields, replacing the username and password values with your own:

Field	Value	Explanation
Service	dyndns	DNS-O-Matic's API appears to be cross-compatible with DynDNS, but UniFi requires you to include specific additional formatting in the Server field before DNS-O-Matic will accept these API calls.
Hostname	all.dnsomatic.com	This asks DNS-O-Matic to update DDNS for all configured endpoints (see DNS-O-Matic FAQ). You can define a single hostname here instead if you prefer, but that exact hostname must already have its own service entry in DNS-O-Matic.
Username	<Your DNS-O-Matic Username>	
Password	<Your DNS-O-Matic Password>	DNS-O-Matic has some specific restrictions to password length and special characters for API calls to its service (see DNS-O-Matic API Docs). You may need to change your DNS-O-Matic password to accommodate them.
Server	updates.dnsomatic.com/nic/update?hostname=%h&myip=%i	This is the special sauce. Without formatting the server request in this field, the DNS-O-Matic API will return an error.
Select Save.

3. (Optional) Forcibly trigger a Dynamic DNS update on your UniFi OS gateway
I tested these commands on a UDM-SE running UniFi OS v3.1.x, but this will probably also work on UDM and UDM-Pro v2.x and up.

UDM devices don't update dynamic DNS on reboot. They only appear to trigger DDNS update API calls when the applicable WAN connection's dynamic IP actually changes. For many of us, the next IP rotation could take days or weeks or months, but instead of waiting for the next update, there is a command we can run via SSH to force an update so we can test the config right away.

If this command can't work for you, power cycling your internet modem may trigger your ISP to automatically rotate your WAN IP, but YMMV because different ISPs handle IP allocation differently.

Pre-requisites
root access to your UniFi OS console over SSH or console.

Steps
Login to your UniFi OS console via SSH or console.

As root, send the command ps aux | grep inadyn.

In the resulting command output, look for the line /run/ddns-eth#-inadyn.conf and note the number in eth#. This is UniFi OS's identifier for your gateway's WAN interface and you need it for the next step. Mine was eth8, but yours may be different.

Send the command inadyn -n -1 --force -f /run/ddns-eth#-inadyn.conf, replacing # with the appropriate number from the command output in the previous step.

Continuing the previous example, where Step 3 returned eth8, then the resulting command would be inadyn -n -1 --force -f /run/ddns-eth8-inadyn.conf.

If the command is successful, your output should look something like this, but XXX.XXX.XXX.XXX will display your current WAN IP:

inadyn[#######]: Update forced for alias all.dnsomatic.com, new IP# XXX.XXX.XXX.XXX
inadyn[#######]: Updating cache for all.dnsomatic.com
Log back in to www.dnsomatic.com and check if both DNS-O-Matic and your downstream services received the update correctly. If your configuration is sound, you should see your configured downstream services' log entries indicating success of some kind. Your WAN IP doesn't need to have changed for you to validate that the update worked.

Troubleshooting
If something isn't working, double-check your configuration for typos, make sure you're using the right API keys and username/password combinations, that your firewall is not inadvertently blocking outbound connections from your gateway to DNS-O-Matic, and that that DNS-O-Matic or your downstream DNS service are online and available.

If Step 5 returned an IP address from a private network address space like 10.X.X.X, 172.16.X.X, or 192.168.X.X (see RFC 1918), then your UniFi OS device may not be detecting your WAN IP correctly. Usually this happens when your network is configured with double NAT. If this is the case, and it's caused by a redundant upstream network device, remove it from your path to the internet. If your ISP requires this, your modem doesn't offer bridge mode, or double NAT isn't otherwise avoidable, consider trying one of the many other methods supported by DNS-O-Matic to perform your DDNS instead.

Credits
The steps forming the instructions for the UniFi OS DDNS update commands were sourced from this GitHub comment, which in turn was sourced from this Reddit comment. Thanks to philsward and @TheFuer!
